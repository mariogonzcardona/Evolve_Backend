name: Deploy Backend (dev)

on:
  push:
    branches: [dev]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Detect changes (requirements / static)
        id: changes
        run: |
          BASE=$(git rev-parse HEAD^ || echo HEAD)
          CHANGED_REQ=$(git diff --name-only $BASE HEAD | grep -E '^requirements\.txt$|^Dockerfile$' || true)
          CHANGED_STATIC=$(git diff --name-only $BASE HEAD | grep -E '^(.*/)?static/|^static/' || true)
          echo "req_changed=$([ -n "$CHANGED_REQ" ] && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "static_changed=$([ -n "$CHANGED_STATIC" ] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add dev host to known_hosts
        run: ssh-keyscan -H "${{ secrets.SSH_HOST_DEV }}" >> ~/.ssh/known_hosts

      - name: Deploy over SSH (dev)
        env:
          REQ_CHANGED: ${{ steps.changes.outputs.req_changed }}
          STATIC_CHANGED: ${{ steps.changes.outputs.static_changed }}
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_DEV }} << 'EOF'
          set -e

          # Seleccionar docker-compose cl√°sico o plugin nuevo
          if command -v docker-compose >/dev/null 2>&1; then
            DC="docker-compose"
          else
            DC="docker compose"
          fi

          cd ${{ secrets.PROJECT_PATH_DEV }}
          git fetch --all
          git reset --hard origin/dev

          if [ "$REQ_CHANGED" = "true" ]; then
            echo "üîß Cambios en requirements/Dockerfile: reconstruyendo imagen..."
            \$DC build web
          else
            echo "‚è≠Ô∏è Sin cambios de imagen: no se reconstruye."
          fi

          # Overrides para esta recreaci√≥n (start.sh usar√° estos flags)
          export RUN_MIGRATIONS=true
          export RUN_COLLECTSTATIC=${STATIC_CHANGED}
          export RUN_FIXTURES=${RUN_FIXTURES:-false}

          # Re-crear SOLO web (sin tumbar deps como db o caddy)
          \$DC up -d --force-recreate --no-deps web
          EOF

      - name: Health check
        run: |
          # Ajusta la URL si tu health endpoint es distinto
          curl -fsS https://api-dev.evolvegrapplingpro.com/health/ || (echo "Health check failed" && exit 1)

      - name: Notify deployment success
        if: success()
        run: echo "Deployment to dev environment successful!"

      - name: Notify deployment failure
        if: failure()
        run: echo "Deployment to dev environment failed!" && exit 1
